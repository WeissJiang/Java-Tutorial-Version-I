1.Your First Java Program

package com.package1;
public class Main {
    public static void main(String[] args) {
        System.out.println("Hello World");
    }
}

Hello World

2.Course Structure

Beginner / Intermediate / Advanced / Mastery
Types / Control Flow / Clean Coding / Finding and Fixing Errors / Packaging your applications

3.Introduction

Variables and Constants
Primitive and Reference Types
Casting
Numbers, Strings and Arrays
Read Input

4.Variables
 
int myAge = 30;

int: type of the variables
myAge: name of the variables (identifier, meaningful descriptive name)
=: assignment operator
30: initial value assigned to the variable (can be changed)

5.Primitive Types

Primitive: for storing simple values;
Reference: for storing complex objects;
Type	  Byte	Range
byte	  1	  [-128, 127]
short	  2	  [-32K, 32K]
int	    4  	[-2B, 2B]
long	  8	
float	  4	
double	8	
char	  2	  A, B, C,…
boolean	1	  True / false

package com.package1;
public class Main {
    public static void main(String[] args) {
            byte myAge = 30;
            //int is to large for storing the value, use byte.
            long viewsCount = 3_123_456_789L;
            //int id too small for storing the 3M, use long and add "L".
            float price = 10.99F;
            //double is too large for storing the value, use float and add "F".
            char letter = 'A';
            //single character uses single quotes, multiple characters or string use double quotes.
            boolean isEligible = true;
    }
}


6.Reference Types

package com.package1;
import java.util.Date;
public class Main {
    public static void main(String[] args) {
            byte myAge = 30;
            Date now = new Date();
            //reference: use the new operator to allocate memory for this variable.
            System.out.println(now);
    }
}

Fri Apr 24 15:10:07 AEST 2020

7.Primitive vs Reference Types

We use primitive types for storing simple values and reference types for storing complex objects. But there’s a very important difference in terms of memory management.

Primitive types:
package com.package1;
public class Main {
    public static void main(String[] args) {
        byte x = 1;
        byte y = x;
        /*
          We have two different variables x and y and these two variables are at different
          memory locations so they're completely independent of each other. In other words,
          if I change the value of x, y, is not going to get affected.
         */
        x = 2;
        System.out.println(y);
    }
}

1

Reference types:
package com.package1;
import java.awt.*;
public class Main {
    public static void main(String[] args) {
        Point point1 = new Point(1,1);
        Point point2 = point1;
        /*
         If we use a reference type, this behavior is different.
         When we declare a primitive variable like a byte, the value that we assigned
         to that variable will be stored in that memory location.
         But when we use a reference type like this point class, it doesn't store the actual value,
         it stores a reference to an object somewhere in the memory.
         So these two variables are not independent of each other, they're referencing
         the same object and that means if I update the point object through either of these variable,
         the changes will be visible to the other variable.
        */
        point1.x = 2;
        System.out.println(point2);
    }
}

java.awt.Point[x=2,y=1]

Online Source:

First :-

Primitive types are the basic types of data: byte, short, int, long, float, double, boolean, char. Primitive variables store primitive values. Reference types are any instantiable class as well as arrays: String, Scanner, Random, Die, int[], String[], etc. Reference variables store addresses to locations in memory for where the data is stored.

Second:-

Primitive types store values but Reference type store handles to objects in heap space. Remember, reference variables are not pointers like you might have seen in C and C++, they are just handles to objects, so that you can access them and make some change on object's state.

8.Strings

package com.package1;
public class Main {
    public static void main(String[] args) {
        String message = "Hello World!!";
        //String is reference type.
        System.out.println(message.endsWith("!!"));
    }
}

true

package com.package1;
public class Main {
    public static void main(String[] args) {
        String message = "Hello World!!";
        //String is reference type.
        System.out.println(message.replace("!","*"));
//message.toLowerCase()
//hello world!!
//trim(): remove unnecessary spaces
    }
}

Hello World**

9.Escape Sequences (换码顺序)

package com.package1;
public class Main {
    public static void main(String[] args) {
        String message = "Hello \"World\"";
        System.out.println(message);
    }
}

Hello "World"

package com.package1;
public class Main {
    public static void main(String[] args) {
        String message = "c:\\Windows\\...";
        System.out.println(message);
    }
}

c:\Windows\…

package com.package1;
public class Main {
    public static void main(String[] args) {
        String message = "c:\nWindows\\...";
        System.out.println(message);
    }
}

c:
Windows\…

package com.package1;
public class Main {
    public static void main(String[] args) {
        String message = "c:\tWindows\\...";
        System.out.println(message);
    }
}

c:	Windows\...


10.Arrays

We use Arrays to store a list of items, like a list of numbers or a list of people or list of messages.

package com.package1;
import java.util.Arrays;
public class Main {
    public static void main(String[] args) {
        int[] numbers = new int[5];
        //arrays are reference types.
        numbers[0] = 1;
        numbers[1] = 2;
        System.out.println(Arrays.toString(numbers));
    }
}

[1, 2, 0, 0, 0]

package com.package1;
import java.util.Arrays;
public class Main {
    public static void main(String[] args) {
        int[] numbers = {2,3,5,1,4};
        System.out.println(numbers.length);
    }
}

5

11.Multi-dimensional Arrays

Matrix

package com.package1;
import java.util.Arrays;
public class Main {
    public static void main(String[] args) {
        int[][] numbers = new int[2][3];
        //int[][] numbers = {{1,2,3},{4,5,6}}, don't need numbers[0][0] = 1.
        numbers[0][0] = 1;
        System.out.println(Arrays.deepToString(numbers));
    }
}

[[1, 0, 0], [0, 0, 0]]

12.Constants
package com.package1;
public class Main {
    public static void main(String[] args) {
        final float PI = 3.14f;
        //pi is a final variable or a constant, capitalize a constant PI.
    }
}

13.Arithmetic Expressions

package com.package1;
public class Main {
    public static void main(String[] args) {
        int result = 10 + 3;
        System.out.println(result);
    }
}

13

package com.package1;
public class Main {
    public static void main(String[] args) {
        double result = (double)10 / (double)3;
        //int result = 10 / 3 = 3
        System.out.println(result);
    }
}

3.3333333333333335

package com.package1;
public class Main {
    public static void main(String[] args) {
        int x = 1;
        int y = x++;
        //int y = ++x;
        //2
        //2
        //x += 2 == x = x + 2
        //x -= 2 == x = x - 2
        //x *= 2 == x = x * 2
        //x /= 2 == x = x / 2
        System.out.println(x);
        System.out.println(y);
    }
}

2
1

14.Order of Operations

package com.package1;
public class Main {
    public static void main(String[] args) {
        int x = (10 + 3) * 2;
        //order: (), * /, + -.
        System.out.println(x);
    }
}

26

15.Casting

package com.package1;
public class Main {
    public static void main(String[] args) {
        //implicit casting: automatically casting
        //byte > short > int > long > float > double
        short x = 1;
        int y = x +2;
        System.out.println(y);
    }
}

3

//double x = 1.1;
//double y = x + 2;  //2.0
//3.1

//double x = 1.1;
//int y = (int)x + 2;
//3

//String x = “1”;
//int y = Integer.parseInt(x) + 2;
//3

//String x = “1.1”;
//double y = Double.parseDouble(x) + 2;
//3.1

16.The Math Class

package com.package1;
public class Main {
    public static void main(String[] args) {
        int result = Math.round(1.1F);
        System.out.println(result);
    }
}

1

//int result = (int)Math.ceil(1.1F);
//2
//double result = Math.ceil(1.1F);
//2.0

//int result = (int)Math.floor(1.1F);
//1

//int result = Math.max(1,2);
//2

//double result = Math.random(); 
//generating a random value between 0 and 1.

//int result = (int)Math.round(Math.random() * 100); 
//generating a random integer between 0 and 100. 

//int result = (int)Math.random() * 100;
//always 0.

//int result = (int)(Math.random() * 100);
//generating a random integer between 0 and 100. 


17.Formatting Numbers

package com.package1;
import java.text.NumberFormat;
public class Main {
    public static void main(String[] args) {
        //NumberFormat currency = new NumberFormat();
        //'numberFormat' is abstract, cannot be instantiated.
        NumberFormat currency = NumberFormat.getCurrencyInstance();
        String result = currency.format(77777777.678);
        System.out.println(result);
    }
}

¥77,777,777.68

package com.package1;
import java.text.NumberFormat;
public class Main {
    public static void main(String[] args) {
        NumberFormat percent = NumberFormat.getPercentInstance();
        String result = percent.format(0.789);
        //rename the variable together: right click - refactor - rename.
        System.out.println(result);
    }
}

79%

Simplify:
package com.package1;
import java.text.NumberFormat;
public class Main {
    public static void main(String[] args) {
        String result = NumberFormat.getPercentInstance().format(0.789);
        System.out.println(result);
    }
}

79%

18.Reading Input

package com.package1;
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Age: ");
        byte age = scanner.nextByte().trim();
        System.out.println("You're " + age + ".");
    }
}

Age:      26
You're 26.

//String name = scanner.next();
//System.out.println("You're " + name + ".");
//Name: Weiss Jiang
//You're Weiss.

//System.out.print("Name: ");
//String name = scanner.nextLine();
//Name: Weiss Jiang
//You're Weiss Jiang.

19.Project: Mortgage Calculator

package com.package1;
import java.text.NumberFormat;
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        final byte MONTHS_IN_YEAR = 12;
        final byte PERCENT = 100;

        Scanner scanner = new Scanner(System.in);

        System.out.print("Principal: ");
        int principal = scanner.nextInt();

        System.out.print("Annual Interest Rate: ");
        float annualInterest = scanner.nextFloat();
        float monthlyInterest = annualInterest / PERCENT / MONTHS_IN_YEAR;

        System.out.print("Period (Years): ");
        byte years = scanner.nextByte();
        int numberOfPayments = years * MONTHS_IN_YEAR;

        double mortgage = principal
                * (monthlyInterest * Math.pow(1 + monthlyInterest, numberOfPayments))
                / (Math.pow(1 + monthlyInterest, numberOfPayments) - 1);
        String mortgageFormatted = NumberFormat.getCurrencyInstance().format(mortgage);
        System.out.println("Mortgage: " + mortgageFormatted);
    }
}

Principal: 450000
Annual Interest Rate: 4
Period (Years): 30
Mortgage: $2,148.37

20.Introduction

Control Flow: controlling the flow of execution of our program.
Comparison Operators
Logical Operators
Conditional Statements
Loops

21.Comparison Operators

package com.package1;
public class Main {
    public static void main(String[] args) {
        int x = 1;
        int y = 1;
        System.out.println(x == y); 
        // ==: equality operator
        // =: assignment operator
        // !=: 不相等
        // >: 大于
        // <: 小于
        // >=: 大于或等
        // <=: 小于或等于
    }
}

true

22.Logical Operators

package com.package1;
public class Main {
    public static void main(String[] args) {
        int temperature = 22;
        boolean isWarm = temperature > 20 && temperature < 30;
        // && : both true, true
        // ||: either true, ture
        // !: not true, true
        System.out.println(isWarm);
    }
}

true

package com.package1;
public class Main {
    public static void main(String[] args) {
        boolean hasHighIncome = true;
        boolean hasGoodCredit = true;
        boolean hasCriminalRecord = false;
        boolean isEligible = (hasHighIncome || hasGoodCredit) && !hasCriminalRecord;
        System.out.println(isEligible);
    }
}

true

23.If Statements

package com.package1;
public class Main {
    public static void main(String[] args) {
        int temp = 32;
        if (temp >30) {
            System.out.println("It's a hot day");
            System.out.println("Drink water");
        }
        else if (temp > 20)
            System.out.println("Beautiful day");
        else
            System.out.println("Cold day");
    }
}

It's a hot day
Drink water

24.Simplifying If Statements

package com.package1;
public class Main {
    public static void main(String[] args) {
        int income = 120_000;
        boolean hasHighIncome = income > 100_000;
        System.out.println(hasHighIncome);
    }
}

true

25.The Ternary Operator

package com.package1;
public class Main {
    public static void main(String[] args) {
        int income = 120_000;
        String className = income > 100_000? "First":"Economy";
        System.out.println(className);
    }
}

First

26.Switch Statements

package com.package1;
public class Main {
    public static void main(String[] args) {
        String role = "admin";
        switch (role) {
            case "admin":
                System.out.println("You're an admin");
                break;
            case "moderator":
                System.out.println("You're a moderator");
                break;
            default:
                System.out.println("You're a guest");
        }
    }
}

You're an admin

27.Exercise: FizzBuzz

package com.package1;
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Number: ");
        int number = scanner.nextInt();

        if (number % 5 == 0)
            System.out.println("Fizz");
        else if (number % 3 == 0)
            System.out.println("Buzz");
        else if (number % 5 == 0 && number % 3 == 0)
            System.out.println("FizzBuzz");
        else
            System.out.println(number);
}
}

Number: 15
Fizz

Solution1:

package com.package1;
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Number: ");
        int number = scanner.nextInt();

        if (number % 5 == 0 && number % 3 == 0)
            System.out.println("FizzBuzz");
        else if (number % 5 == 0)
            System.out.println("Fizz");
        else if (number % 3 == 0)
            System.out.println("Buzz");
        else
            System.out.println(number);
    }
}

Number: 15
FizzBuzz

Solution2:

package com.package1;
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Number: ");
        int number = scanner.nextInt();

        if (number % 5 == 0) {
            if (number % 3 == 0)
            System.out.println("FizzBuzz");
            else
                System.out.println("Fizz");
        }
        else if (number % 5 == 0)
            System.out.println("Fizz");
        else if (number % 3 == 0)
            System.out.println("Buzz");
        else
            System.out.println(number);
    }
}

Number: 15
FizzBuzz

28.For Loops

package com.package1;
public class Main {
    public static void main(String[] args) {
        for (int i = 0; i < 5; i++)
            System.out.println("Hello World ");
    }
}

Hello World
Hello World
Hello World
Hello World
Hello World

package com.package1;
public class Main {
    public static void main(String[] args) {
        for (int i = 1; i <= 5; i++)
            System.out.println("Hello World " + i);
    }
}

Hello World 1
Hello World 2
Hello World 3
Hello World 4
Hello World 5

package com.package1;
public class Main {
    public static void main(String[] args) {
        for (int i = 5; i > 0; i--)
            System.out.println("Hello World " + i);
    }
}

Hello World 5
Hello World 4
Hello World 3
Hello World 2
Hello World 1

29.While Loops

package com.package1;
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = "";
        while (!input.equals("quit")) {
            System.out.print("Input: ");
            input = scanner.next().toLowerCase();
            System.out.println(input);
        }
    }
}

Input: 1
1
Input: quit
quit

30.Do/While Loops

package com.package1;
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = "";
        /*
        while (!input.equals("quit")) {
            System.out.print("Input: ");
            input = scanner.next().toLowerCase();
            System.out.println(input);
        }
        */
        //with while loops, we check the condition first.
        //so if the condition is false, this loop will not be executed.
        //in contrast, in do/while loops, we check the condition last.
        //so do/while loops, always get executed at least once.

        do {
            System.out.print("Input: ");
            input = scanner.next().toLowerCase();
            System.out.println(input);
        } while (!input.equals("quit"));
    }
}

31.Break and Continue Statements

package com.package1;
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = "";
        while (!input.equals("quit")) {
            System.out.print("Input: ");
            input = scanner.next().toLowerCase();
            if (input.equals("quit"))
                break;
            System.out.println(input);
        }
    }
}

Input: 1
1
Input: 3
3
Input: Quit

package com.package1;
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = "";
        while (!input.equals("quit")) {
            System.out.print("Input: ");
            input = scanner.next().toLowerCase();
            if (input.equals("pass"))
                continue;
            if (input.equals("quit"))
                break;
            System.out.println(input);
        }
    }
}

Input: 1
1
Input: pass
Input: pass
Input: quit

package com.package1;
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = "";
        while (true) {
            System.out.print("Input: ");
            input = scanner.next().toLowerCase();
            if (input.equals("pass"))
                continue;  
//moves the control to the beginning of the loop
            if (input.equals("quit"))
                break;  
//terminates the loop
            System.out.println(input);
        }
    }
}
//to make sure that if use “true”, the loop needs a “break”

32.For Each Loop

package com.package1;
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        String[] fruits = { "Apple", "Mango", "Orange" };

        for (int i = 0; i < fruits.length; i++)
            System.out.println(fruits[i]);

        for (String fruit : fruits)
            System.out.println(fruit);
    }
}

Apple
Mango
Orange
Apple
Mango
Orange

33.Project: Mortgage Calculator

package com.package1;
import java.text.NumberFormat;
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        final byte MONTHS_IN_YEAR = 12;
        final byte PERCENT = 100;

        int principal = 0;
        float monthlyInterest = 0;
        int numberOfPayments = 0;

        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.print("Principal: ");
            principal = scanner.nextInt();
            if (principal >= 1000 && principal <= 1_000_000 )
                break;
            System.out.println("Enter a calue between 1,000 and 1,000,000.");
        }

        while (true) {
            System.out.print("Annual Interest Rate: ");
            float annualInterest = scanner.nextFloat();
            if (annualInterest >= 1 && annualInterest <= 30) {
                monthlyInterest = annualInterest / PERCENT / MONTHS_IN_YEAR;
                break;
            }
            System.out.println("Enter a value between 1 and 30.");
        }

        while (true) {
            System.out.print("Period (Years): ");
            byte years = scanner.nextByte();
            if (years >= 1 && years <= 30) {
                numberOfPayments = years * MONTHS_IN_YEAR;
                break;
            }
            System.out.println("Enter a value between 1 and 30.");
        }

        double mortgage = principal
                * (monthlyInterest * Math.pow(1 + monthlyInterest, numberOfPayments))
                / (Math.pow(1 + monthlyInterest, numberOfPayments) - 1);
        String mortgageFormatted = NumberFormat.getCurrencyInstance().format(mortgage);
        System.out.println("Mortgage: " + mortgageFormatted);
    }
}

Principal: 450000
Annual Interest Rate: 4
Period (Years): 25
Mortgage: $2,375.27
